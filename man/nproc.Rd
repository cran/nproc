% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nproc.R
\name{nproc}
\alias{nproc}
\title{Calculate the Neyman-Pearson ROC}
\usage{
nproc(x = NULL, y, method = c("logistic", "penlog", "svm", "randomforest",
  "lda", "nb", "ada", "custom"), kernel = "radial", score = NULL,
  conf = FALSE, alphalist = seq(from = 0.01, to = 0.99, by = 0.01),
  delta = 0.05, split = 1, split.ratio = 0.5, n01.min = 10,
  adaptive = FALSE, cv = FALSE, fold = 5, n.cores = 1, randSeed = 0)
}
\arguments{
\item{x}{n * p observation matrix. n observations, p covariates.}

\item{y}{n 0/1 observatons.}

\item{method}{classification method(s).
\itemize{
\item logistic: \link{glm} function with family = 'binomial'
\item penlog: \code{\link[glmnet]{glmnet}} in \code{glmnet} package
\item svm: \code{\link[e1071]{svm}} in \code{e1071} package
\item randomforest: \code{\link[randomForest]{randomForest}} in \code{randomForest} package
\item lda: \code{\link[MASS]{lda}} in \code{MASS} package
\item nb: \code{\link[e1071]{naiveBayes}} in \code{e1071} package
\item ada: \code{\link[ada]{ada}} in \code{ada} package
\item custom: a custom classifier. score vector needed.
}}

\item{kernel}{kernel used in the svm method. Default = 'radial'.}

\item{score}{score vector corresponding to y. Required when method  = 'custom'.}

\item{conf}{whether to generate two np roc curves representing a confidence band with prob 1-delta.}

\item{alphalist}{the sequence of type I error values. Default = seq(from=0,to=1,by=0.01).}

\item{delta}{the violation rate of the type I error. Default = 0.05.}

\item{split}{the number of splits for the class 0 sample. Default = 1. For ensemble
version, choose split > 1.  When method = 'custom',  split = 0 always.
version, choose split > 1.  When method = 'custom',  split = 0 always.}

\item{split.ratio}{the ratio of splits used for the class 0 sample to train the
classifier. Default = 0.5.}

\item{n01.min}{the minimum number of class 0 observations used for training classifier. Default = 10.}

\item{adaptive}{whether to adaptively choose the number of observations used for
determining the cutoff when 1/2 n0 < lower bound < n0. Default = F.}

\item{cv}{whether cross-validation is performed for calculating the roc curve.}

\item{fold}{number of folds for the cross-validation. Default = 5.}

\item{n.cores}{number of cores used for parallel computing. Default = 1.}

\item{randSeed}{the random seed used in the algorithm.}
}
\description{
\code{nproc} calculate the Neyman-Pearson ROC
curve for a given sequence of type I error values.
}
\examples{
n = 200
x = matrix(rnorm(n*2),n,2)
c = 1+3*x[,1]
y = rbinom(n,1,1/(1+exp(-c)))
#fit = nproc(x, y, method = 'svm')
fit2 = nproc(x, y, method = 'penlog')

##Plot the nproc curve
plot(fit2)
fit3 = nproc(x, y, method = 'penlog', adaptive = TRUE)

##Plot the nproc curve
plot(fit3)

#fit3 = nproc(x, y, method = 'penlog',  n.cores = 2)
#In practice, replace 2 by the number of cores available 'detectCores()'
#fit4 = nproc(x, y, method = 'penlog', n.cores = detectCores())

#Testing the custom method for nproc.
#fit = npc(x, y, method = 'lda', split = 0,  n.cores = 2) #use npc to get score list.
#obj = nproc(x = NULL, y = fit$y, method = 'custom', split = 0,
#score = fit$score,  n.cores = 2)

#Compared different classifiers via nproc
#fit5 = nproc(x, y, method = c('lda','ada','randomforest'),  n.cores = detectCores())

#Confidence nproc curves
#fit6 = nproc(x, y, method = 'lda', conf = TRUE)

#nproc ensembled version
#fit7 = nproc(x, y, method = 'lda', split = 21)
}
\seealso{
\code{\link{npc}}
}

